// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSXDataFetchingApp.Model;

namespace PSXDataFetchingApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PSXDataFetchingApp.Model.BindingTargets.ClosingMarketSummary", b =>
                {
                    b.Property<long>("ClosingMarketSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Closing")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("High")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ldcp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Low")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Open")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("ClosingMarketSummaryId");

                    b.ToTable("ClosingMarketSummary");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.BindingTargets.FundInfo", b =>
                {
                    b.Property<long>("FundInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("FundInfoId");

                    b.ToTable("FundInfo");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.BindingTargets.FundwiseBucketMarketSummary", b =>
                {
                    b.Property<long>("FundwiseBucketMarketSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppDep")
                        .HasColumnType("TEXT");

                    b.Property<string>("AveragePrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("BookCost")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClosingPercentage")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<long>("FundId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MarketPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("MarketValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReadingStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShareName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("FundwiseBucketMarketSummaryId");

                    b.ToTable("FundwiseBucketMarketSummary");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.BindingTargets.FundwiseMarketSummary", b =>
                {
                    b.Property<long>("FundwiseMarketSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AppDep")
                        .HasColumnType("TEXT");

                    b.Property<string>("AveragePrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("BookCost")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClosingPercentage")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("FundId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MarketPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("MarketValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShareName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("FundwiseMarketSummaryId");

                    b.ToTable("FundwiseMarketSummary");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.BindingTargets.MufapMarketSummary", b =>
                {
                    b.Property<long>("MufapMarketSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mf")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mtd")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nav")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sandm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ter")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValidityDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ytd")
                        .HasColumnType("TEXT");

                    b.Property<string>("_15Days")
                        .HasColumnType("TEXT");

                    b.Property<string>("_180Days")
                        .HasColumnType("TEXT");

                    b.Property<string>("_1Day")
                        .HasColumnType("TEXT");

                    b.Property<string>("_270Days")
                        .HasColumnType("TEXT");

                    b.Property<string>("_30Days")
                        .HasColumnType("TEXT");

                    b.Property<string>("_365Days")
                        .HasColumnType("TEXT");

                    b.Property<string>("_90Days")
                        .HasColumnType("TEXT");

                    b.HasKey("MufapMarketSummaryId");

                    b.ToTable("MufapMarketSummary");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.CurrentMarketSummary", b =>
                {
                    b.Property<long>("CurrentMarketSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Change")
                        .HasColumnType("REAL");

                    b.Property<string>("Closing")
                        .HasColumnType("TEXT");

                    b.Property<string>("Current")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("High")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ldcp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Low")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Open")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("CurrentMarketSummaryId");

                    b.ToTable("CurrentMarketSummary");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.Pkfrv", b =>
                {
                    b.Property<long>("PkfrvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BMA")
                        .HasColumnType("TEXT");

                    b.Property<string>("CANDM")
                        .HasColumnType("TEXT");

                    b.Property<string>("CMKA")
                        .HasColumnType("TEXT");

                    b.Property<string>("CouponFrequency")
                        .HasColumnType("TEXT");

                    b.Property<string>("FMA")
                        .HasColumnType("TEXT");

                    b.Property<string>("FloatingRateBond")
                        .HasColumnType("TEXT");

                    b.Property<string>("IONE")
                        .HasColumnType("TEXT");

                    b.Property<string>("IssuanceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("JSCM")
                        .HasColumnType("TEXT");

                    b.Property<string>("MCPL")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaturityDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SCPL")
                        .HasColumnType("TEXT");

                    b.Property<string>("VCPL")
                        .HasColumnType("TEXT");

                    b.HasKey("PkfrvId");

                    b.ToTable("Pkfrv");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.Pkrv", b =>
                {
                    b.Property<long>("PkrvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Change")
                        .HasColumnType("TEXT");

                    b.Property<string>("MidRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tenor")
                        .HasColumnType("TEXT");

                    b.HasKey("PkrvId");

                    b.ToTable("Pkrv");
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.ScripInfo", b =>
                {
                    b.Property<long>("ScripInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<long>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("ScripInfoId");

                    b.ToTable("ScripInfo");

                    b.HasData(
                        new
                        {
                            ScripInfoId = 1L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "IBL HealthCare Limited.",
                            Number = 0L,
                            Symbol = "IBLHL"
                        },
                        new
                        {
                            ScripInfoId = 2L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Macter International Limited.",
                            Number = 0L,
                            Symbol = "MACTER"
                        },
                        new
                        {
                            ScripInfoId = 3L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "The Searle Company Ltd.",
                            Number = 0L,
                            Symbol = "SEARL"
                        },
                        new
                        {
                            ScripInfoId = 4L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Wyeth Pakistan Limited.",
                            Number = 0L,
                            Symbol = "WYETH"
                        },
                        new
                        {
                            ScripInfoId = 5L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Altern Energy Ltd.",
                            Number = 0L,
                            Symbol = "ALTN"
                        },
                        new
                        {
                            ScripInfoId = 6L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Engro Powergen Qadirpur Ltd.",
                            Number = 0L,
                            Symbol = "EPQL"
                        },
                        new
                        {
                            ScripInfoId = 7L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Hub Power Company Limited.",
                            Number = 0L,
                            Symbol = "HUBC"
                        },
                        new
                        {
                            ScripInfoId = 8L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "K-Electric Limited.",
                            Number = 0L,
                            Symbol = "KEL"
                        },
                        new
                        {
                            ScripInfoId = 9L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Oil & Gas Development Company Ltd.",
                            Number = 0L,
                            Symbol = "OGDC"
                        },
                        new
                        {
                            ScripInfoId = 10L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Lucky Cement Limited.",
                            Number = 0L,
                            Symbol = "LUCK"
                        },
                        new
                        {
                            ScripInfoId = 11L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "AGRITECH LIMITED",
                            Number = 0L,
                            Symbol = "AGL"
                        },
                        new
                        {
                            ScripInfoId = 12L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Allied Bank Ltd.",
                            Number = 0L,
                            Symbol = "ABL"
                        },
                        new
                        {
                            ScripInfoId = 13L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "FAUJI FERTILIZER BIN QASIM",
                            Number = 0L,
                            Symbol = "FFBL"
                        },
                        new
                        {
                            ScripInfoId = 14L,
                            CategoryId = 0L,
                            Code = 0L,
                            Name = "Zephyr Textile Limited.",
                            Number = 0L,
                            Symbol = "ZTL"
                        });
                });

            modelBuilder.Entity("PSXDataFetchingApp.Model.Status", b =>
                {
                    b.Property<long>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Clear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Comment")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Dump")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Fetching")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fetching_Date_End")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fetching_Date_Start")
                        .HasColumnType("TEXT");

                    b.Property<string>("Table")
                        .HasColumnType("TEXT");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
